name: Terraform AWS Deployment

on:
  push:
    branches:  # Trigger on push to the main branch
      - main
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch
  workflow_dispatch:  # This enables manual trigger from GitHub UI
    inputs:
      environment:
        description: 'Choose your environment'
        required: true
        default: 'production'
        type: choice
        options:
          - prod
          - stag
          - dev
      terraform_action:
        description: 'Select Terraform action'
        required: true
        default: 'apply'
        type: choice
        options:
          - init
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform Setup and Apply
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.4.0'

    # Configure AWS credentials
    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Set the environment and action variables
    - name: Set Environment and Action Variables
      run: |
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Terraform Action: ${{ github.event.inputs.terraform_action }}"

    # Terraform Init (if selected)
    - name: Terraform Init
      if: ${{ github.event.inputs.terraform_action == 'init' }}
      run: terraform init -upgrade

    # Terraform Plan (if selected)
    - name: Terraform Plan
      if: ${{ github.event.inputs.terraform_action == 'plan' }}
      run: |
        terraform init -upgrade
        terraform plan -var-file=environments/${{ github.event.inputs.environment }}.tfvars -no-color

    # Terraform Apply (if selected)
    - name: Terraform Apply
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      run: |
        terraform init -upgrade
        terraform apply -var-file=environments/${{ github.event.inputs.environment }}.tfvars -auto-approve

    # Terraform Destroy (if selected)
    - name: Terraform Destroy
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      run: |
        terraform init -upgrade
        terraform destroy -var-file=environments/${{ github.event.inputs.environment }}.tfvars -auto-approve
