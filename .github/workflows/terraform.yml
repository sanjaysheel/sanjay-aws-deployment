name: Terraform AWS Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose your environment'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - stag
          - dev
      terraform_action:
        description: 'Select Terraform action'
        required: true
        default: 'apply'
        type: choice
        options:
          - init
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform Setup and Action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.4.0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Print Inputs
        run: |
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Terraform Action: ${{ github.event.inputs.terraform_action }}"

      # Always run terraform init before any other action except init itself
      - name: Terraform Init (always before plan/apply/destroy)
        if: ${{ github.event.inputs.terraform_action != 'init' }}
        run: terraform init

      # Run terraform init if selected explicitly
      - name: Terraform Init (explicit)
        if: ${{ github.event.inputs.terraform_action == 'init' }}
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.terraform_action == 'plan' }}
        run: terraform plan

      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        run: terraform destroy -auto-approve
